<project default="main">
	<!-- Required to use tasks from ant-contrib -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" />

	<property file="build.properties" />


	<!--********************************************* 
		***** XML to SVG transformation tasks *******
		********************************************* -->

	<!-- Runs XSLT transformation on every file in the specified directory. Results are written to
		the specified output subdirectory. Optionaly a filter can be provided restricting
		the files processed. -->
	<target name="transform">
		<path id="batchTransform.classpath">
			<pathelement location="${batchTransform.classpathDir}" />
			<pathelement location="${batchTransform.saxonJar}" />
		</path>
		<java classname="${batchTransform.Class}" classpathref="batchTransform.classpath" fork="true">
			<arg value="${style}" />
			<arg value="${xmlFileDir}" />
			<arg value="${outputExtension}" />

			<!-- output directory, relative to input, optional -->
			<arg value="generated" />

			<!-- optional -->
			<arg value="${batchTransform.filter}" />
		</java>
	</target>

	<!-- Transform one file - not used but keep it to know the syntax. -->
	<target name="transformFile">
		<!-- java -jar  d:\kuba\_prog\saxon8-8j\saxon8.jar -o pic.svg gr.xml use_msgr2svg.xsl-->
		<java jar="${saxonJar}" fork="true">
			<arg value="${inputFile}" />
			<arg value="${style}" />
		</java>
	</target>

	<!-- Creates an HTML file which side by side compares all svg files of the same name from two given directories.
	 A filter can be provided restricting used files. -->
	<target name="createComparison">
		<path id="createComparison.classpath">
			<pathelement location="${createComparison.classpathDir}" />
		</path>
		<java classname="${createComparison.Class}" classpathref="createComparison.classpath">
			<arg value="${outputFile}" />
			<arg value="${generatedSubdir}" />
			<arg value="${templatesSubdir}" />
			<!-- optional -->
			<arg value="${createComparison.filter}" />
		</java>
	</target>


	<!--********************************************* 
		***** SVG to PNG transformation tasks *******
		********************************************* -->

	<target name="generatePngFromSvg">
		<!-- TODO directory or more files -->
		<!-- TODO size of a picture / ration -->
		<exec executable="${generatePng.inkscape}">
			<arg value="-f" />
			<arg value="${svgFile}" />
			<arg value="-e" />
			<arg value="${svgFile}${pngFileExtension}" />
			<arg value="-b" />
			<arg value="white" />
			<arg value="-d" />
			<arg value="200" />
		</exec>
	</target>

	<!-- recursively go through all *.svg files in a given directory and transforms them
		to png. The output files are created in the same directory as input files (with .png extension).-->
	<target name="generatePng">
		<foreach target="generatePngFromSvg" param="svgFile">
			<param name="pngFileExtension" value=".png" />
			<path>
				<fileset dir="${generatePng.dir}">
					<include name="**/*.svg" />
				</fileset>
			</path>
		</foreach>
	</target>

	<!--********************************************* 
		***** Validation tasks **********************
		********************************************* -->

	<!-- Runs batch validation for specified directory and schema (both Relax NG or DTD) -->
	<target name="validate">
		<path id="batchValidator.classpath">
			<pathelement location="${batchValidator.classpathDir}" />
			<pathelement location="${batchValidator.jarDir}/isorelax.jar" />
			<pathelement location="${batchValidator.jarDir}/msv.jar" />
			<pathelement location="${batchValidator.jarDir}/relaxngDatatype.jar" />
			<pathelement location="${batchValidator.jarDir}/xercesImpl.jar" />
			<pathelement location="${batchValidator.jarDir}/xmlParserAPIs.jar" />
			<pathelement location="${batchValidator.jarDir}/xsdlib.jar" />
		</path>

		<java classname="${batchValidator.Class}" classpathref="batchValidator.classpath" fork="true">
			<arg value="${schemaFile}" />
			<arg value="${xmlFileDir}" />
			<!-- optional -->
			<!--arg value="${filter}"/-->
		</java>
	</target>

	<target name="copyDtds">
		<copy file="../scripts/osgr.dtd" todir="e2e/osgr" overwrite="true"/>
		<copy file="../scripts/msgr.dtd" todir="e2e/msgr" overwrite="true"/>
		<copy file="../scripts/xygr.dtd" todir="e2e/xygr" overwrite="true"/>
	</target>

	<target name="validateAllRng">
		<antcall target="validate">
			<param name="schemaFile" value="..\scripts\graph2svg.rng" />
			<param name="xmlFileDir" value="e2e\osgr" />
		</antcall>
		<antcall target="validate">
			<param name="schemaFile" value="..\scripts\graph2svg.rng" />
			<param name="xmlFileDir" value="e2e\msgr" />
		</antcall>
		<antcall target="validate">
			<param name="schemaFile" value="..\scripts\graph2svg.rng" />
			<param name="xmlFileDir" value="e2e\xygr" />
		</antcall>
	</target>

	<target name="validateAllDtd">
		<antcall target="validate">
			<param name="schemaFile" value="..\scripts\osgr.dtd" />
			<param name="xmlFileDir" value="e2e\osgr" />
		</antcall>
		<antcall target="validate">
			<param name="schemaFile" value="..\scripts\msgr.dtd" />
			<param name="xmlFileDir" value="e2e\msgr" />
		</antcall>
		<antcall target="validate">
			<param name="schemaFile" value="..\scripts\xygr.dtd" />
			<param name="xmlFileDir" value="e2e\xygr" />
		</antcall>
	</target>

	<target name="validateAll" depends="copyDtds">
		<antcall target="validateAllDtd"/>
		<antcall target="validateAllRng"/>
	</target>


	<!--********************************************* 
		***** Bulk tasks ****************************
		********************************************* -->

	<target name="testOsgr">
		<antcall target="transform">
			<param name="style" value="..\scripts\graph2svg.xsl" />
			<param name="xmlFileDir" value="e2e\osgr" />
			<param name="outputExtension" value="svg" />
		</antcall>

		<antcall target="createComparison">
			<param name="outputFile" value="e2e\osgr\comparison.html" />
			<param name="generatedSubdir" value="generated" />
			<param name="templatesSubdir" value="templates" />
		</antcall>
	</target>

	<target name="testMsgr">
		<antcall target="transform">
			<param name="style" value="..\scripts\graph2svg.xsl" />
			<param name="xmlFileDir" value="e2e\msgr" />
			<param name="outputExtension" value="svg" />
		</antcall>

		<antcall target="createComparison">
			<param name="outputFile" value="e2e\msgr\comparison.html" />
			<param name="generatedSubdir" value="generated" />
			<param name="templatesSubdir" value="templates" />
		</antcall>
	</target>

	<target name="testXygr">
		<antcall target="transform">
			<param name="style" value="..\scripts\graph2svg.xsl" />
			<param name="xmlFileDir" value="e2e\xygr" />
			<param name="outputExtension" value="svg" />
		</antcall>

		<antcall target="createComparison">
			<param name="outputFile" value="e2e\xygr\comparison.html" />
			<param name="generatedSubdir" value="generated" />
			<param name="templatesSubdir" value="templates" />
		</antcall>
	</target>

	<target name="suppresDoctypes">
		<replaceregexp byline="true" encoding="utf-8">
			<regexp pattern="&lt;!DOCTYPE(.*)&gt;" />
			<substitution expression="&lt;!--DOCTYPE\1--&gt;" />
			<fileset dir="e2e">
				<include name="*/*.xml" />
			</fileset>
		</replaceregexp>
	</target>

	<target name="resumeDoctypes">
		<replaceregexp byline="true" encoding="utf-8">
			<regexp pattern="&lt;!--DOCTYPE(.*)--&gt;" />
			<substitution expression="&lt;!DOCTYPE\1&gt;" />
			<fileset dir="e2e">
				<include name="*/*.xml" />
			</fileset>
		</replaceregexp>
	</target>

	<target name="testAllNoDtd" depends="copyDtds">
		<antcall target="suppresDoctypes" />
		<antcall target="testAll" />
		<antcall target="resumeDoctypes" />
	</target>

	<target name="testAll" depends="copyDtds">
		<antcall target="testOsgr" />
		<antcall target="testMsgr" />
		<antcall target="testXygr" />
	</target>

	<target name="main">
		<!--
		<antcall target="validateAll" />
		-->
		<antcall target="testAll" />
	</target>

</project>
